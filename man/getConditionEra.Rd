% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_emr.R, R/getConditionEra.R
\name{getConditionEra}
\alias{getConditionEra}
\title{Data integration for condition era calculation}
\usage{
getConditionEra(
  dxDataFile,
  idColName,
  icdColName,
  dateColName,
  icdVerColName = NULL,
  icd10usingDate = NULL,
  groupDataType = ccs,
  customGroupingTable,
  isDescription = TRUE,
  gapDate = 30,
  selectedCaseFile = NULL
)
}
\arguments{
\item{dxDataFile}{A data frame object of clinical diagnostic data with at least 3 columns: ID, ICD, and Date. As for date column, the data format should be YYYY/MM/DD or YYYY-MM-DD.}

\item{idColName}{Column name of ID column in dxDataFile. Data type of this argumant should be string without quotation marks.}

\item{icdColName}{Column name of ICD column in dxDataFile. Data type of this argumant should be string without quotation marks.}

\item{dateColName}{Column name of date column in dxDataFile, and the type of date column should be a date format in R or a string format with date information in YYYY/MM/DD or YYYY-MM-DD. Data type of this argumant should be string without quotation marks.}

\item{icdVerColName}{(Optional) Column name if there is a columns to record ICD-9/10 version used in dxDataFile. In this column, data format should be numeric 9L or 10L to indicate which ICD version is used for every cell. See examples below to get more information.}

\item{icd10usingDate}{The date that ICD-10 was started to be used in dxDataFile dataset. The data format should be YYYY/MM/DD or YYYY-MM-DD. Necessary if icdVerColName is null.}

\item{groupDataType}{Four Stratified methods can be chosen: CCS (\code{ccs}), multiple-level CCS (\code{ccslvl1}, \code{ccslvl2}, \code{ccslvl3}, \code{ccslvl4}), PheWAS (\code{PheWAS}), comorbidities (\code{ahrq},\code{charlson}, \code{elix}), precise or fuzzy customized  method (\code{customGrepIcdGroup}, \code{customIcdGroup}). The value should be string stated above without quotation mark. Default value is \code{ccs}.}

\item{customGroupingTable}{Used-defined grouping categories. \code{icdDxToCustom} needs a dataset with two columns called "Group" and "ICD", respectively; User can define one or more disease categories in "Group" column, and define a list of corresponding category-related ICD codes in "ICD" column. \code{icdDxToCustomGrep} needs a dataset with two columns: "Group", "grepIcd"; "Group" defines one or more disease categories and "grepICD" defines disease-related ICD code character strings containing regular expressions.}

\item{isDescription}{Binary. If true, category description of classification methods will be used in the group column. If false, category name will be used. By default, it is set to be \code{True} (standard category description).}

\item{gapDate}{Length of condition gap with numeric data type, By default, it set to 30 days \code{"30"}.}

\item{selectedCaseFile}{A data frame with the label of case selected or not. Can be generated by \code{\link{selectCases}} function or a self-defined data frame (as long as the column names and data type are the same as the output of selectCases function, but not recommended). Default is \code{'NULL'}}
}
\value{
A new \code{data.table} based on classifying \code{dxDataFile} and calculated condition era by \code{groupDataType} for each patient.
}
\description{
Conditions era is used to integrate distributed data of clinical records into a single progression record.
}
\details{
This function calculates condition era by grouped categories of each patient.
}
\examples{
# sample file for example

head(sampleDxFile)

# Select case with "Diseases of the urinary system" by level 2 of CCS classification

selectedCaseFile <- selectCases(sampleDxFile, ID, ICD, Date,
                                icdVerColName = NULL,
                                icd10usingDate = "2015/10/01",
                                groupDataType = ccslvl2,
                                caseCondition = "Diseases of the urinary system",
                                caseCount = 1)

# Condition era calculation with case selection

Era1 <- getConditionEra(sampleDxFile, ID, ICD, Date, icdVerColName = NULL, "2015-10-01",
                        groupDataType = CCSlvl3,
                        selectedCaseFile = selectedCaseFile)
head(Era1)

# Define the grouping categories

grepTable <- data.frame(Group = "Chronic kidney disease",
                        grepIcd = "^58|^N18",
                        stringsAsFactors = FALSE)

# Condition era calculation with grouping custom method of code standardization

Era2 <- getConditionEra(sampleDxFile, ID, ICD, Date, icdVerColName = NULL, "2015-10-01",
                        groupDataType = customGrepIcdGroup,
                        customGroupingTable = grepTable)
head(Era2)
}
\seealso{
Other data integration functions: \code{\link{selectCases}}, \code{\link{splitDataByDate}}, \code{\link{getEligiblePeriod}}
}
